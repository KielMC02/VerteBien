@model VerteBienV1.Models.HORARIOS

@{
    ViewBag.Title = "Editar mi Horario";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<center>
    <img src="~/Imagenes/Verte Bien Transparente 2.png" width="128" height="128" style="margin-top:2%" />
    <h4>Establecer horario de trabajo</h4>
    <hr class="w-50" />
</center>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id_horario)

    @*<div class="form-group">
            @Html.LabelFor(model => model.id_usuario, "id_usuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_usuario", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_usuario, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="container">
        <div class="card h-100 shadow-lg my-5 ">
            <div class="card-body">
                <div class="form-row row mt-4">
                    <div class="col-md-4 col-12 col-lg-4">
                        <div class="form-group ">
                            @Html.Label("Horario de apertura días semanales", htmlAttributes: new { @class = "control-label col-md-12 my-1 my-1" })
                            <div class="col-md-12" id="cars">
                                <select name="semanales_inicio" data-bs-toggle="tooltip" data-bs-placement="top" title="" class="form-control col-md-10" id="semanales_inicio">
                                    <option>Seleccione una...</option>
                                </select>
                                @Html.DropDownList("semanalesInicio", null, htmlAttributes: new { @class = "form-control col-md-10 d-none", @id = "semanalesInicio" })
                                @Html.ValidationMessageFor(model => model.semanales_inicio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*Semanales Cierre*@
                        <div class="form-group ">
                            @Html.Label("Horario de cierre días semanales", htmlAttributes: new { @class = "control-label col-md-12 my-1" })
                            <div class="col-md-12" id="cars">
                                <select name="semanales_cierre" data-bs-toggle="tooltip" data-bs-placement="top" title="" class="form-control col-md-10" id="semanales_cierre">
                                    <option>Seleccione una...</option>
                                </select>

                                @Html.DropDownList("semanalesCierre", null, htmlAttributes: new { @class = "form-control col-md-10 d-none", @id="semanalesCierre" })
                                @Html.ValidationMessageFor(model => model.semanales_inicio, "", new { @class = "text-danger" })
                                <label class="col-12 mt-1">
                                    <input type="checkbox" name="checkboxName" class="checkbox" />
                                    <div class="switch switch_1"></div>
                                    <p class="status" id="status1">Cerrado</p>
                                </label>
                            </div>
                        </div>

                    </div>
                  

                    <div class="col-md-4 col-12 col-lg-4">
                        @*Sabados Inicio*@
                        <div class="form-group">
                            @Html.Label("Horario de apertura los sábados", htmlAttributes: new { @class = "control-label col-md-12 my-1" })
                            <div class="col-md-12" id="cars">
                                <select name="sabado_inicio" data-bs-toggle="tooltip" data-bs-placement="top" title="" class="form-control col-md-10" id="sabado_inicio">
                                    <option>Seleccione una...</option>
                                </select>
                                @Html.DropDownList("sabadoInicio", null, htmlAttributes: new { @class = "form-control col-md-10 d-none", @id = "sabadoInicio" })
                                @Html.ValidationMessageFor(model => model.semanales_inicio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*Sabados Cierre*@
                        <div class="form-group ">
                            @Html.Label("Horario de cierre los sábados", htmlAttributes: new { @class = "control-label col-md-12 my-1" })
                            <div class="col-md-12" id="cars">
                                <select name="sabado_cierre" data-bs-toggle="tooltip" data-bs-placement="top" title="" class="form-control col-md-10" id="sabado_cierre">
                                    <option>Seleccione una...</option>
                                </select>
                                @Html.DropDownList("sabadoCierre", null, htmlAttributes: new { @class = "form-control col-md-10 d-none ", @id = "sabadoCierre" })
                                @Html.ValidationMessageFor(model => model.semanales_inicio, "", new { @class = "text-danger" })
                                <label class="col-12 mt-1">
                                    <input type="checkbox" name="checkboxName" class="checkbox" />
                                    <div class="switch switch_2"></div>
                                    <p class="status" id="status2">Cerrado</p>
                                </label>
                            </div>
                        </div>



                    </div>
                    <div class="col-md-4 col-12 col-lg-4">

                        @*Domingos Inicio*@
                        <div class="form-group ">
                            @Html.Label("Horario de apertura los domingos", htmlAttributes: new { @class = "control-label col-md-12 my-1" })
                            <div class="col-md-12" id="cars">
                                <select name="domingo_inicio" data-bs-toggle="tooltip" data-bs-placement="top" title="" class="form-control col-md-10" id="domingo_inicio">
                                    <option>Seleccione una...</option>
                                </select>
                                @Html.DropDownList("domingoInicio", null, htmlAttributes: new { @class = "form-control col-md-10 d-none", @id = "domingoInicio" })
                                @Html.ValidationMessageFor(model => model.semanales_inicio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*Domingos Cierre*@
                        <div class="form-group ">
                            @Html.Label("Horario de cierre los domingos", htmlAttributes: new { @class = "control-label col-md-12 my-1" })
                            <div class="col-md-12" id="cars">
                                <select name="domingo_cierre" data-bs-toggle="tooltip" data-bs-placement="top" title="" class="form-control col-md-10" id="domingo_cierre">
                                    <option>Seleccione una...</option>
                                </select>
                                @Html.DropDownList("domingoCierre", null, htmlAttributes: new { @class = "form-control col-md-10 d-none", @id = "domingoCierre" })
                                @Html.ValidationMessageFor(model => model.semanales_inicio, "", new { @class = "text-danger" })
                                <label class="col-12 mt-1">
                                    <input type="checkbox" name="checkboxName" class="checkbox" />
                                    <div class="switch switch_3"></div>
                                    <p class="status" id="status3">Cerrado</p>
                                </label>
                            </div>

                        </div>



                    </div>





                    <center>
                        <div class="form-group col-md-12">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn text-white" style="background-color:#DBA312; margin-top:2%">Guardar Horario</button>
                            </div>
                        </div>
                    </center>
                </div>
            </div>
        </div>
    </div>
}

<script>
    window.onload = function () {
        function convertirNumeroDecimalAHora(valorNumerico) {
            valorNumerico = valorNumerico.replace(/,/, '.');
            let hora = Math.floor(valorNumerico);
            let minutos = (valorNumerico % 1) * 60;
            let ampm = hora >= 12 ? "PM" : "AM";

            // Ajustar el formato de las horas y minutos para que tengan dos dígitos y cambiar a formato de 12 horas
            if (hora === 0) {
                hora = 12;
            } else if (hora > 12) {
                hora = hora - 12;
            }

            if (hora < 10) hora = "0" + hora;
            if (minutos < 10) minutos = "0" + minutos;

            return hora + ":" + minutos + " " + ampm;
        }


        // Función para llenar el selectHtml con las opciones del dropDownList
        function llenarSelectHtml(sufijo) {
            let dropDownList = document.getElementById(sufijo + "Inicio");
            let selectHtml = document.getElementById(sufijo + "_inicio");
            selectHtml.innerHTML = ''; // Limpiar opciones previas

            for (let i = 0; i < dropDownList.options.length; i++) {
                let optionText = convertirNumeroDecimalAHora(dropDownList.options[i].value);
                let optionValue = dropDownList.options[i].value;
                let newOption = new Option(optionText, optionValue);
                selectHtml.appendChild(newOption);
            }

            // Obtener el elemento de cierre correspondiente
            let dropDownListCierre = document.getElementById(sufijo + "Cierre");
            let selectHtmlCierre = document.getElementById(sufijo + "_cierre");
            selectHtmlCierre.innerHTML = ''; // Limpiar opciones previas

            for (let j = 0; j < dropDownListCierre.options.length; j++) {
                let optionTextCierre = convertirNumeroDecimalAHora(dropDownListCierre.options[j].value);
                let optionValueCierre = dropDownListCierre.options[j].value;
                let newOptionCierre = new Option(optionTextCierre, optionValueCierre);
                selectHtmlCierre.appendChild(newOptionCierre);
            }
        }


        // Función para establecer el valor seleccionado en ambos elementos
        function establecerValoresSeleccionados(sufijo) {
            let dropDownList = document.getElementById(sufijo + "Inicio");
            let selectHtml = document.getElementById(sufijo + "_inicio");
            let textoSeleccionado = dropDownList.options[dropDownList.selectedIndex].text;
            selectHtml.value = textoSeleccionado;

            // Obtener el elemento de cierre correspondiente
            let dropDownListCierre = document.getElementById(sufijo + "Cierre");
            let selectHtmlCierre = document.getElementById(sufijo + "_cierre");

            let textoSeleccionadoCierre = dropDownListCierre.options[dropDownListCierre.selectedIndex].text;
            selectHtmlCierre.value = textoSeleccionadoCierre;
        }

        // Llenar y establecer valores seleccionados al cargar la página para cada par de selects
        let sufijos = ["semanales", "sabado", "domingo"];
        sufijos.forEach(function (sufijo) {
            llenarSelectHtml(sufijo);
            establecerValoresSeleccionados(sufijo);

            let dropDownList = document.getElementById(sufijo + "Inicio");
            let selectHtml = document.getElementById(sufijo + "_inicio");

            // Establecer eventos para cada par de selects de inicio
            dropDownList.addEventListener("change", function () {
                let textoSeleccionado = dropDownList.options[dropDownList.selectedIndex].text;
                selectHtml.value = textoSeleccionado;
            });

            selectHtml.addEventListener("change", function () {
                let nuevoValorSeleccionado = selectHtml.value;
                dropDownList.value = nuevoValorSeleccionado;
            });

            // Obtener los elementos de cierre
            let dropDownListCierre = document.getElementById(sufijo + "Cierre");
            let selectHtmlCierre = document.getElementById(sufijo + "_cierre");

            // Establecer eventos para cada par de selects de cierre
            dropDownListCierre.addEventListener("change", function () {
                let textoSeleccionadoCierre = dropDownListCierre.options[dropDownListCierre.selectedIndex].text;
                selectHtmlCierre.value = textoSeleccionadoCierre;
                console.log(textoSeleccionadoCierre)
            });

            selectHtmlCierre.addEventListener("change", function () {
                let nuevoValorSeleccionadoCierre = selectHtmlCierre.value;
                dropDownListCierre.value = nuevoValorSeleccionadoCierre;
            });
        });
       


        function verificarHorarios() {
            let semanalesInicio = $('#semanales_inicio').val();
            let semanalesCierre = $('#semanales_cierre').val();
            let sabadoInicio = $('#sabado_inicio').val();
            let sabadoCierre = $('#sabado_cierre').val();
            let domingoInicio = $('#domingo_inicio').val();
            let domingoCierre = $('#domingo_cierre').val();

            if (semanalesInicio !== "7" && semanalesCierre !== "7" && parseInt(semanalesCierre) <= parseInt(semanalesInicio)) {
                $('select[name="semanales_cierre"]').val(parseInt(semanalesInicio) + 1);
                $('#semanalesCierre').val((parseInt(semanalesInicio) + 1).toString());
            }

            if (sabadoInicio !== "7" && sabadoCierre !== "7" && parseInt(sabadoCierre) <= parseInt(sabadoInicio)) {
                $('select[name="sabado_cierre"]').val(parseInt(sabadoInicio) + 1);
                $('#sabadoCierre').val((parseInt(sabadoInicio) + 1).toString());
            }

            if (domingoInicio !== "7" && domingoCierre !== "7" && parseInt(domingoCierre) <= parseInt(domingoInicio)) {
                $('select[name="domingo_cierre"]').val(parseInt(domingoInicio) + 1);
                $('#domingoCierre').val((parseInt(domingoInicio) + 1).toString());

            }
        }

        function actualizarEstado(entrada, salida, selector, status) {
            if (entrada === "7" && salida === "7") {
                $(selector).removeClass("switchOn");
                $(status).css('opacity', '1');
            } else {
                $(selector).addClass("switchOn");
                $(status).css('opacity', '0');
            }
        }


        if (semanalesInicio === "7" && semanalesCierre === "7") {
            $('.switch_1').addClass("switchOn");
        } else {
            $('.switch_1').removeClass("switchOn");
        }

        if (sabadoInicio === "7" && sabadoCierre === "7") {
            $('.switch_2').addClass("switchOn");
        } else {
            $('.switch_2').removeClass("switchOn");
        }

        if (domingoInicio === "7" && domingoCierre === "7") {
            $('.switch_3').addClass("switchOn");
        } else {
            $('.switch_3').removeClass("switchOn");
        }

      


        function handleClickSwitch(selector, inicio, cierre,dropInicio,dropCierre, status) {
            var inicioValue = $('select[name="' + inicio + '"]').val();
            var cierreValue = $('select[name="' + cierre + '"]').val();
           
        

            if (inicioValue === "7" && cierreValue === "7") {
                $('#modalStatus').modal('show'); // abrir el modal de Bootstrap
            } else {
                $(selector).toggleClass("switchOn");

                if ($(selector).hasClass("switchOn")) {
                    $(status).css('opacity', '0');
                } else {
                    $('select[name="' + inicio + '"]').val("7");
                    $('select[name="' + cierre + '"]').val("7");
                    $('select[name="' + dropInicio + '"]').val("7");
                    $('select[name="' + dropCierre + '"]').val("7");
                    $(status).css('opacity', '1');
                }
            }
        }

        $('#semanales_inicio, #semanales_cierre').change(function () {
            verificarHorarios();
            actualizarEstado(
               $('#semanales_inicio').val(),
                $('#semanales_cierre').val(),
                '.switch_1',
                '#status1'
            );
        });

        $('#sabado_inicio, #sabado_cierre').change(function () {
            verificarHorarios();
            actualizarEstado(
                $('#sabado_inicio').val(),
                $('#sabado_cierre').val(),
                '.switch_2',
                '#status2'
            );
        });

        $('#domingo_inicio, #domingo_cierre').change(function () {
            verificarHorarios();
            actualizarEstado(
                $('#domingo_inicio').val(),
                $('#domingo_cierre').val(),
                '.switch_3',
                '#status3'
            );
        });

        $('.switch_1').click(function () {
            handleClickSwitch('.switch_1', 'semanales_inicio', 'semanales_cierre','semanalesInicio','semanalesCierre', '#status1');
        
        });

        $('.switch_2').click(function () {
            handleClickSwitch('.switch_2', 'sabado_inicio', 'sabado_cierre','sabadoInicio','sabadoCierre', '#status2');
        });

        $('.switch_3').click(function () {
            handleClickSwitch('.switch_3', 'domingo_inicio', 'domingo_cierre','domingoInicio','domingoCierre','#status3');
      
        });

        //Los id se pueden quedar como estaba utiliza select html para que se visualicen y utiliza la sincro para que pasen los valores al BAck, utilizando los html puedes usar el codigo anterior de los status ya que si cambian de valor el dropback tambien

        actualizarEstado($('select[name="semanales_inicio"]').val(), $('select[name="semanales_cierre"]').val(), '.switch_1', '#status1');
        actualizarEstado($('select[name="sabado_inicio"]').val(), $('select[name="sabado_cierre"]').val(), '.switch_2', '#status2');
        actualizarEstado( $('select[name="domingo_inicio"]').val(), $('select[name="domingo_cierre"]').val(), '.switch_3', '#status3');

    }
   
    



</script>